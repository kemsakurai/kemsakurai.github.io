{"version":3,"sources":["webpack:///./src/components/UserInfo/index.jsx","webpack:///./src/components/PostCover/index.jsx","webpack:///./src/components/PostInfo/index.jsx","webpack:///./src/components/SocialLinks/index.jsx","webpack:///./src/components/PostSuggestions/index.jsx","webpack:///./src/templates/post.jsx","webpack:///./data/SiteConfig.js","webpack:///./src/components/UserLinks/UserLinks.jsx","webpack:///./src/components/ToolbarActions/ToolbarActions.jsx","webpack:///./src/components/Footer/Footer.jsx","webpack:///./src/components/Navigation/NavList.jsx","webpack:///./src/components/Navigation/index.jsx","webpack:///./src/layout/index.jsx","webpack:///./src/components/PostTags/index.jsx","webpack:///./src/components/SEO/index.jsx"],"names":["UserInfo","render","_this$props$config","this","props","config","userAvatar","userName","userLocation","userDescription","userLinks","userTwitter","expanded","userLinksElement","react_default","a","createElement","UserLinks","labeled","Card_default","className","CardTitle_default","expander","avatar","Avatars_default","src","role","title","subtitle","dist","username","options","count","CardText_default","expandable","IconSeparator_default","label","iconBefore","FontIcons_default","iconClassName","Component","PostCover","_this$props","postNode","mobile","post","frontmatter","cover","startsWith","__PATH_PREFIX__","coverHeight","style","backgroundImage","height","PostInfo","icon","date","timeToRead","gatsby_link_default","to","kebabCase_default","category","SocialLinks","postPath","url","urljoin","siteUrl","pathPrefix","iconSize","renderShareCount","filter","RedditShareButton","RedditIcon","round","size","RedditShareCount","TwitterShareButton","TwitterIcon","GooglePlusShareButton","GooglePlusIcon","GooglePlusShareCount","FacebookShareButton","quote","excerpt","FacebookIcon","FacebookShareCount","LinkedinShareButton","description","LinkedinIcon","LinkedinShareCount","TelegramShareButton","TelegramIcon","PostSuggestions","prevSlug","prevTitle","nextSlug","nextTitle","gatsby_browser_entry","forceFontSize","forceSize","PostTemplate","_this","_React$Component","call","state","handleResize","bind","_assertThisInitialized","componentDidMount","window","addEventListener","componentWillUnmount","removeEventListener","innerWidth","setState","location","pageContext","slug","nexttitle","nextslug","prevtitle","prevslug","postOverlapClass","data","markdownRemark","id","category_id","postDefaultCategoryID","layout","Helmet_default","siteTitle","rel","href","SEO","postSEO","components_PostCover","coverClassName","Cards_default","components_PostInfo","dangerouslySetInnerHTML","__html","html","PostTags","tags","components_SocialLinks","components_UserInfo","components_PostSuggestions_PostSuggestions","React","pageQuery","module","exports","blogPostDir","siteTitleAlt","siteLogo","siteDescription","siteRss","siteFBAppID","siteGATrackingID","siteGTMID","copyright","getLinkElements","map","link","react__WEBPACK_IMPORTED_MODULE_0___default","react_md_lib_Buttons__WEBPACK_IMPORTED_MODULE_1___default","flat","secondary","key","Toolbar","Footer","Buttons_default","GetNavList","NavList","primaryText","leftIcon","component","Link","divider","forEach","push","Navigation","children","LocalTitle","footerLinks","NavigationDrawers_default","drawerTitle","toolbarTitle","contentClassName","navItems","mobileDrawerType","NavigationDrawer","DrawerTypes","TEMPORARY","tabletDrawerType","desktopDrawerType","toolbarActions","ToolbarActions_ToolbarActions","components_Footer_Footer","MainLayout","components_Navigation","name","content","react__WEBPACK_IMPORTED_MODULE_1___default","tag","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","textDecoration","lodash_kebabCase__WEBPACK_IMPORTED_MODULE_0___default","react_md_lib_Chips__WEBPACK_IMPORTED_MODULE_3___default","image","postURL","postMeta","blogURL","schemaOrgJSONLD","@context","@type","alternateName","itemListElement","position","item","@id","headline","react_helmet__WEBPACK_IMPORTED_MODULE_1___default","type","JSON","stringify","property"],"mappings":"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","file":"component---src-templates-post-jsx-6d1994715ebdb38e333e.js","sourcesContent":["import React, { Component } from \"react\";\nimport Card from \"react-md/lib/Cards/Card\";\nimport CardTitle from \"react-md/lib/Cards/CardTitle\";\nimport CardText from \"react-md/lib/Cards/CardText\";\nimport Avatar from \"react-md/lib/Avatars\";\nimport FontIcon from \"react-md/lib/FontIcons\";\nimport IconSeparator from \"react-md/lib/Helpers/IconSeparator\";\nimport { Follow } from \"react-twitter-widgets\";\nimport UserLinks from \"../UserLinks/UserLinks\";\nimport \"./UserInfo.scss\";\n\nclass UserInfo extends Component {\n  render() {\n    const {\n      userAvatar,\n      userName,\n      userLocation,\n      userDescription,\n      userLinks,\n      userTwitter\n    } = this.props.config;\n    const { expanded } = this.props;\n    const userLinksElement = (\n      <UserLinks config={this.props.config} labeled={expanded} />\n    );\n    if (!userAvatar && !userName && !userLocation && !userDescription) {\n      if (userLinks) {\n        return (\n          <Card className=\"md-grid md-cell md-cell--12 user-info\">\n            {userLinksElement}\n          </Card>\n        );\n      }\n      return null;\n    }\n    return (\n      <Card className=\"md-grid md-cell md-cell--12 user-info\">\n        <CardTitle\n          expander={!expanded}\n          avatar={userAvatar && <Avatar src={userAvatar} role=\"presentation\" />}\n          title={userName && userName}\n          subtitle={\n            userTwitter\n              ? <Follow\n                  username={userTwitter}\n                  options={{ count: expanded ? \"none\" : \"none\" }}\n                />\n              : \"Author\"\n          }\n        />\n        <CardText expandable={!expanded}>\n          {userLocation &&\n            <IconSeparator label={userLocation} iconBefore>\n              <FontIcon iconClassName=\"fa fa-map-marker\" />\n            </IconSeparator>}\n          <p>\n            {userDescription && userDescription}\n          </p>\n          {userLinksElement}\n        </CardText>\n      </Card>\n    );\n  }\n}\n\nexport default UserInfo;\n","import React, { Component } from \"react\";\nimport \"./PostCover.scss\";\n\nclass PostCover extends Component {\n  render() {\n    const { postNode, mobile } = this.props;\n    const post = postNode.frontmatter;\n    /* eslint no-undef: \"off\"*/\n    const cover = post.cover.startsWith(\"/\")\n      ? __PATH_PREFIX__ + post.cover\n      : post.cover;\n    const coverHeight = mobile ? 180 : 350;\n    return (\n      <div\n        style={{ backgroundImage: `url(${cover})`, height: `${coverHeight}px` }}\n        className=\"md-grid md-cell--9 post-cover\"\n      />\n    );\n  }\n}\n\nexport default PostCover;\n","import React, { Component } from \"react\";\nimport CardTitle from \"react-md/lib/Cards/CardTitle\";\nimport Avatar from \"react-md/lib/Avatars\";\nimport FontIcon from \"react-md/lib/FontIcons\";\nimport Link from \"gatsby-link\";\nimport _ from \"lodash\";\nimport \"./PostInfo.scss\";\n\nclass PostInfo extends Component {\n  render() {\n    const { postNode } = this.props;\n    const post = postNode.frontmatter;\n    return (\n      <div className=\"post-info\">\n        <CardTitle\n          avatar={<Avatar icon={<FontIcon iconClassName=\"fa fa-calendar\" />} />}\n          title={`Published on ${post.date}`}\n          subtitle={`${postNode.timeToRead} min read`}\n        />\n        <Link\n          className=\"category-link\"\n          to={`/categories/${_.kebabCase(post.category)}`}\n        >\n          <CardTitle\n            avatar={\n              <Avatar icon={<FontIcon iconClassName=\"fa fa-folder-open\" />} />\n            }\n            title={\"In category\"}\n            subtitle={post.category}\n          />\n        </Link>\n      </div>\n    );\n  }\n}\n\nexport default PostInfo;\n","import React, { Component } from \"react\";\nimport {\n  FacebookShareButton,\n  GooglePlusShareButton,\n  LinkedinShareButton,\n  TwitterShareButton,\n  TelegramShareButton,\n  RedditShareButton,\n  FacebookShareCount,\n  GooglePlusShareCount,\n  LinkedinShareCount,\n  RedditShareCount,\n  FacebookIcon,\n  TwitterIcon,\n  TelegramIcon,\n  GooglePlusIcon,\n  LinkedinIcon,\n  RedditIcon\n} from \"react-share\";\nimport urljoin from \"url-join\";\nimport config from \"../../../data/SiteConfig\";\nimport \"./SocialLinks.scss\";\n\nclass SocialLinks extends Component {\n  render() {\n    const { postNode, postPath, mobile } = this.props;\n    const post = postNode.frontmatter;\n    const url = urljoin(config.siteUrl, config.pathPrefix, postPath);\n    const iconSize = mobile ? 36 : 48;\n    const filter = count => (count > 0 ? count : \"\");\n    const renderShareCount = count => (\n      <div className=\"share-count\">{filter(count)}</div>\n    );\n\n    return (\n      <div className=\"social-links\">\n        <RedditShareButton url={url} title={post.title}>\n          <RedditIcon round size={iconSize} />\n          <RedditShareCount url={url}>\n            {count => renderShareCount(count)}\n          </RedditShareCount>\n        </RedditShareButton>\n        <TwitterShareButton url={url} title={post.title}>\n          <TwitterIcon round size={iconSize} />\n        </TwitterShareButton>\n        <GooglePlusShareButton url={url}>\n          <GooglePlusIcon round size={iconSize} />\n          <GooglePlusShareCount url={url}>\n            {count => renderShareCount(count)}\n          </GooglePlusShareCount>\n        </GooglePlusShareButton>\n        <FacebookShareButton url={url} quote={postNode.excerpt}>\n          <FacebookIcon round size={iconSize} />\n          <FacebookShareCount url={url}>\n            {count => renderShareCount(count)}\n          </FacebookShareCount>\n        </FacebookShareButton>\n        <LinkedinShareButton\n          url={url}\n          title={post.title}\n          description={postNode.excerpt}\n        >\n          <LinkedinIcon round size={iconSize} />\n          <LinkedinShareCount url={url}>\n            {count => renderShareCount(count)}\n          </LinkedinShareCount>\n        </LinkedinShareButton>\n        <TelegramShareButton url={url}>\n          <TelegramIcon round size={iconSize} />\n        </TelegramShareButton>\n      </div>\n    );\n  }\n}\n\nexport default SocialLinks;","import React, { Component } from \"react\";\nimport FontIcon from \"react-md/lib/FontIcons\";\nimport { Link } from \"gatsby\";\nimport \"./PostSuggestions.scss\";\n\nexport default class PostSuggestions extends Component {\n  render() {\n    const { prevSlug, prevTitle, nextSlug, nextTitle } = this.props;\n\n    return (\n      <div className=\"post-suggestions md-grid md-cell--12\">\n        <Link to={prevSlug} className=\"post-suggestion\">\n          <FontIcon\n            forceFontSize\n            forceSize={64}\n            className=\"secondary-color arrow-nav\"\n          >\n            arrow_back\n          </FontIcon>\n          <div className=\"headline-container hide-on-mobile\">\n            <h2 className=\"md-body-2 secondary-color\">Previous</h2>\n            <h6 className=\"md-headline secondary-color\">{prevTitle}</h6>\n          </div>\n        </Link>\n        <Link to={nextSlug} className=\"post-suggestion\">\n          <div className=\"headline-container\">\n            <h2 className=\"md-body-2 secondary-color\">Next</h2>\n            <h6 className=\"md-headline secondary-color\">{nextTitle}</h6>\n          </div>\n          <FontIcon\n            forceFontSize\n            forceSize={64}\n            className=\"secondary-color arrow-nav\"\n          >\n            arrow_forward\n          </FontIcon>\n        </Link>\n      </div>\n    );\n  }\n}","import React from \"react\";\nimport Helmet from \"react-helmet\";\nimport { graphql } from \"gatsby\";\nimport Card from \"react-md/lib/Cards\";\nimport CardText from \"react-md/lib/Cards/CardText\";\nimport Layout from \"../layout\";\nimport UserInfo from \"../components/UserInfo\";\nimport PostTags from \"../components/PostTags\";\nimport PostCover from \"../components/PostCover\";\nimport PostInfo from \"../components/PostInfo\";\nimport SocialLinks from \"../components/SocialLinks\";\nimport PostSuggestions from \"../components/PostSuggestions\";\nimport SEO from \"../components/SEO\";\nimport config from \"../../data/SiteConfig\";\nimport \"./b16-tomorrow-dark.css\";\nimport \"./post.scss\";\n\nexport default class PostTemplate extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mobile: true\n    };\n    this.handleResize = this.handleResize.bind(this);\n  }\n\n  componentDidMount() {\n    this.handleResize();\n    window.addEventListener(\"resize\", this.handleResize);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.handleResize);\n  }\n\n  handleResize() {\n    if (window.innerWidth >= 640) {\n      this.setState({ mobile: false });\n    } else {\n      this.setState({ mobile: true });\n    }\n  }\n\n  render() {\n    const { mobile } = this.state;\n    const { location, pageContext } = this.props;\n    const { slug, nexttitle, nextslug, prevtitle, prevslug } = pageContext;\n    const expanded = !mobile;\n    const postOverlapClass = mobile ? \"post-overlap-mobile\" : \"post-overlap\";\n    const postNode = this.props.data.markdownRemark;\n    const post = postNode.frontmatter;\n\n    if (!post.id) {\n      post.id = slug;\n    }\n    if (!post.category_id) {\n      post.category_id = config.postDefaultCategoryID;\n    }\n\n    const coverHeight = mobile ? 180 : 350;\n    return (\n      <Layout location={location}>\n        <div className=\"post-page md-grid md-grid--no-spacing\">\n          <Helmet>\n            <title>{`${post.title} | ${config.siteTitle}`}</title>\n            <link rel=\"canonical\" href={`${config.siteUrl}${post.id}`} />\n          </Helmet>\n          <SEO postPath={slug} postNode={postNode} postSEO />\n          <PostCover\n            postNode={postNode}\n            coverHeight={coverHeight}\n            coverClassName=\"md-grid md-cell--9 post-cover\"\n          />\n          <div\n            className={`md-grid md-cell--9 post-page-contents mobile-fix ${postOverlapClass}`}\n          >\n            <Card className=\"md-grid md-cell md-cell--12 post\">\n              <CardText className=\"post-body\">\n                <h1 className=\"md-display-2 post-header\">{post.title}</h1>\n                <PostInfo postNode={postNode} />\n                <div dangerouslySetInnerHTML={{ __html: postNode.html }} />\n              </CardText>\n              <div className=\"post-meta\">\n                <PostTags tags={post.tags} />\n                <SocialLinks\n                  postPath={slug}\n                  postNode={postNode}\n                  mobile={mobile}\n                />\n              </div>\n            </Card>\n            <UserInfo\n              className=\"md-grid md-cell md-cell--12\"\n              config={config}\n              expanded={expanded}\n            />\n          </div>\n\n          <PostSuggestions\n            prevSlug={prevslug}\n            prevTitle={prevtitle}\n            nextSlug={nextslug}\n            nextTitle={nexttitle}\n          />\n        </div>\n      </Layout>\n    );\n  }\n}\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      timeToRead\n      excerpt\n      frontmatter {\n        title\n        cover\n        date\n        category\n        tags\n      }\n      fields {\n        slug\n        date\n      }\n    }\n  }\n`;","module.exports = {\n  blogPostDir: \"posts\", // The name of directory that contains your posts.\n  siteTitle: \"portfolio.monotalk.xyz\", // Site title.\n  siteTitleAlt: \"portfolio.monotalk.xyz\", // Alternative site title for SEO.\n  siteLogo: \"/logos/logo-1024.png\", // Logo used for SEO and manifest.\n  siteUrl: \"https://portfolio.monotalk.xyz\", // Domain of your website without pathPrefix.\n  pathPrefix: \"/\", // Prefixes all links. For cases when deployed to example.github.io/gatsby-material-starter/.\n  siteDescription: \"kemsakurai's portfilio\", // Website description used for RSS feeds/meta description tag.\n  siteRss: \"/rss.xml\", // Path to the RSS file.\n  siteFBAppID: \"106162306804490\", // FB Application ID for using app insights\n  siteGATrackingID: \"UA-47311644-4\", // Tracking code ID for google analytics.\n  siteGTMID: \"GTM-MDJFD5S\",\n  postDefaultCategoryID: \"Tech\", // Default category for posts.\n  userName: \"Ken Sakurai\", // Username to display in the author segment.\n  userTwitter: \"\", // Optionally renders \"Follow Me\" in the UserInfo segment.\n  userLocation: \"Japan\", // User location to display in the author segment.\n  userAvatar: \"https://www.gravatar.com/avatar/89a66f750e1c2c4670f5e1702f96b137\", // User avatar to display in the author segment.\n  userDescription: \"Hart wraming dirty Software Development\", // Links to social profiles/projects you want to display in the author segment/navigation bar.\n  userLinks: [ \n    {\n      label: \"GitHub\",\n      url: \"https://github.com/kemsakurai\",\n      iconClassName: \"fa fa-github\"\n    },\n    {\n      label: \"Twitter\",\n      url: \"https://twitter.com/monotalk_xyz\",\n      iconClassName: \"fa fa-twitter\"\n    },\n    {\n      label: \"Email\",\n      url: \"mailto:sakurai.kem@gmail.com\",\n      iconClassName: \"fa fa-envelope\"\n    }\n  ],\n  copyright: \"Copyright © 2017. Monotalk.xyz\" // Copyright string for the footer of the website and RSS feed.\n};\n","import React, { Component } from \"react\";\nimport Button from \"react-md/lib/Buttons\";\nimport \"./UserLinks.scss\";\n\nclass UserLinks extends Component {\n  getLinkElements() {\n    const { userLinks } = this.props.config;\n    const { labeled } = this.props;\n    return userLinks.map(link =>\n      <Button\n        icon={!labeled}\n        flat={labeled}\n        secondary\n        key={link.label}\n        iconClassName={link.iconClassName}\n        href={link.url}\n      >\n        {labeled ? link.label : \"\"}\n      </Button>\n    );\n  }\n  render() {\n    const { userLinks } = this.props.config;\n    if (!userLinks) {\n      return null;\n    }\n    return (\n      <div className=\"user-links\">\n        {this.getLinkElements()}\n      </div>\n    );\n  }\n}\n\nexport default UserLinks;\n","import React, { Component } from \"react\";\nimport UserLinks from \"../UserLinks/UserLinks\";\nimport \"./ToolbarActions.scss\";\n\nclass Toolbar extends Component {\n  render() {\n    const { config } = this.props;\n    return (\n      <div className=\"toolbar-actions\">\n        <div className=\"userlinks-container\">\n          <UserLinks config={config} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Toolbar;\n","import React, { Component } from \"react\";\nimport Button from \"react-md/lib/Buttons\";\nimport Link from \"gatsby-link\";\nimport UserLinks from \"../UserLinks/UserLinks\";\nimport config from \"../../../data/SiteConfig\";\nimport \"./Footer.scss\";\n\nclass Footer extends Component {\n  render() {\n    const url = config.siteRss;\n    const { userLinks } = this.props;\n    const copyright = config.copyright;\n    if (!copyright) {\n      return null;\n    }\n    return (\n      <footer className=\"footer\">\n        {userLinks ? <UserLinks config={config} labeled /> : null}\n        <div className=\"notice-container\">\n          <div className=\"copyright\">\n            <h4>\n              {copyright}\n            </h4>\n          </div>\n\n          <div className=\"rss\">\n            <Link to={url}>\n              <Button flat secondary iconClassName=\"fa fa-rss\">\n                Subscribe\n              </Button>\n            </Link>\n          </div>\n          <div className=\"based-on\">\n            <h4>\n              Based on{\" \"}\n              <a href=\"https://github.com/Vagr9K/gatsby-material-starter\">\n                Gatsby Material Starter\n              </a>.\n            </h4>\n          </div>\n        </div>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","import React from \"react\";\nimport FontIcon from \"react-md/lib/FontIcons\";\nimport Link from \"gatsby-link\";\n\nfunction GetNavList(config) {\n  const NavList = [\n    {\n      primaryText: \"Home\",\n      leftIcon: <FontIcon>home</FontIcon>,\n      component: Link,\n      to: \"/\"\n    },\n    {\n      divider: true\n    }\n  ];\n\n  if (config.userLinks) {\n    config.userLinks.forEach(link => {\n      NavList.push({\n        primaryText: link.label,\n        leftIcon: <FontIcon forceSize iconClassName={link.iconClassName} />,\n        component: \"a\",\n        href: link.url\n      });\n    });\n  }\n\n  NavList.push({ divider: true });\n\n  NavList.push({\n    primaryText: \"About\",\n    leftIcon: <FontIcon>person</FontIcon>,\n    component: Link,\n    to: \"/about/\"\n  });\n  return NavList;\n}\nexport default GetNavList;\n","import React, { Component } from \"react\";\nimport NavigationDrawer from \"react-md/lib/NavigationDrawers\";\nimport ToolbarActions from \"../ToolbarActions/ToolbarActions\";\nimport Footer from \"../Footer/Footer\";\nimport GetNavList from \"./NavList\";\nimport \"./Navigation.scss\";\n\nclass Navigation extends Component {\n  render() {\n    const { children, config, LocalTitle } = this.props;\n    const footerLinks = LocalTitle !== \"About\";\n    return (\n      <NavigationDrawer\n        drawerTitle={config.siteTitle}\n        toolbarTitle={LocalTitle}\n        contentClassName=\"main-content\"\n        navItems={GetNavList(config)}\n        mobileDrawerType={NavigationDrawer.DrawerTypes.TEMPORARY}\n        tabletDrawerType={NavigationDrawer.DrawerTypes.TEMPORARY}\n        desktopDrawerType={NavigationDrawer.DrawerTypes.TEMPORARY}\n        toolbarActions={<ToolbarActions config={config} />}\n      >\n        <div className=\"main-container\">\n          {children}\n        </div>\n        <Footer userLinks={footerLinks} />\n      </NavigationDrawer>\n    );\n  }\n}\n\nexport default Navigation;\n","import React from \"react\";\nimport Helmet from \"react-helmet\";\nimport \"font-awesome/scss/font-awesome.scss\";\nimport Navigation from \"../components/Navigation\";\nimport config from \"../../data/SiteConfig\";\nimport \"./index.scss\";\nimport \"./global.scss\";\n\nexport default class MainLayout extends React.Component {\n  render() {\n    const { children } = this.props;\n    return (\n      <Navigation config={config} LocalTitle={this.props.title}>\n        <div>\n          <Helmet>\n            <meta name=\"description\" content={config.siteDescription} />\n          </Helmet>\n          {children}\n        </div>\n      </Navigation>\n    );\n  }\n}","import React, { Component } from \"react\";\nimport _ from \"lodash\";\nimport Link from \"gatsby-link\";\nimport Chip from \"react-md/lib/Chips\";\nimport \"./PostTags.scss\";\n\nclass PostTags extends Component {\n  render() {\n    const { tags } = this.props;\n    return (\n      <div className=\"post-tag-container\">\n        {tags &&\n          tags.map(tag =>\n            <Link\n              key={tag}\n              style={{ textDecoration: \"none\" }}\n              to={`/tags/${_.kebabCase(tag)}`}\n            >\n              <Chip label={tag} className=\"post-preview-tags\" />\n            </Link>\n          )}\n      </div>\n    );\n  }\n}\n\nexport default PostTags;\n","import React, { Component } from \"react\";\nimport Helmet from \"react-helmet\";\nimport urljoin from \"url-join\";\nimport config from \"../../../data/SiteConfig\";\n\nclass SEO extends Component {\n  render() {\n    const { postNode, postPath, postSEO } = this.props;\n    let title;\n    let description;\n    let image;\n    let postURL;\n    if (postSEO) {\n      const postMeta = postNode.frontmatter;\n      ({ title } = postMeta);\n      description = postMeta.description\n        ? postMeta.description\n        : postNode.excerpt;\n      image = postMeta.cover;\n      postURL = urljoin(config.siteUrl, config.pathPrefix, postPath);\n    } else {\n      title = config.siteTitle;\n      description = config.siteDescription;\n      image = config.siteLogo;\n    }\n    image = urljoin(config.siteUrl, config.pathPrefix, image);\n    const blogURL = urljoin(config.siteUrl, config.pathPrefix);\n    const schemaOrgJSONLD = [\n      {\n        \"@context\": \"http://schema.org\",\n        \"@type\": \"WebSite\",\n        url: blogURL,\n        name: title,\n        alternateName: config.siteTitleAlt ? config.siteTitleAlt : \"\"\n      }\n    ];\n    if (postSEO) {\n      schemaOrgJSONLD.push([\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          itemListElement: [\n            {\n              \"@type\": \"ListItem\",\n              position: 1,\n              item: {\n                \"@id\": postURL,\n                name: title,\n                image\n              }\n            }\n          ]\n        },\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BlogPosting\",\n          url: blogURL,\n          name: title,\n          alternateName: config.siteTitleAlt ? config.siteTitleAlt : \"\",\n          headline: title,\n          image: {\n            \"@type\": \"ImageObject\",\n            url: image\n          },\n          description\n        }\n      ]);\n    }\n    return (\n      <Helmet>\n        {/* General tags */}\n        <meta name=\"description\" content={description} />\n        <meta name=\"image\" content={image} />\n\n        {/* Schema.org tags */}\n        <script type=\"application/ld+json\">\n          {JSON.stringify(schemaOrgJSONLD)}\n        </script>\n\n        {/* OpenGraph tags */}\n        <meta property=\"og:url\" content={postSEO ? postURL : blogURL} />\n        {postSEO ? <meta property=\"og:type\" content=\"article\" /> : null}\n        <meta property=\"og:title\" content={title} />\n        <meta property=\"og:description\" content={description} />\n        <meta property=\"og:image\" content={image} />\n        <meta\n          property=\"fb:app_id\"\n          content={config.siteFBAppID ? config.siteFBAppID : \"\"}\n        />\n\n        {/* Twitter Card tags */}\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta\n          name=\"twitter:creator\"\n          content={config.userTwitter ? config.userTwitter : \"\"}\n        />\n        <meta name=\"twitter:title\" content={title} />\n        <meta name=\"twitter:description\" content={description} />\n        <meta name=\"twitter:image\" content={image} />\n      </Helmet>\n    );\n  }\n}\n\nexport default SEO;"],"sourceRoot":""}